CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$`Credible set`[[2]][[2]]
z[CARMA.results$`Credible set`[[2]][[2]]]
c0=CARMA.results
#S3=runsusie(D3)
library(susieR)
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
s0=SSr
z=D3$beta/sqrt(D3$varbeta)
z[105]=-z[105]
z.list[[1]]<-z
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
SSr
SSr$lbf
SSr$alpha
SSr$alpha[,1:10]
apply(SSr$alpha,MAR=1,sum)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
CARMA.results$`Credible set`
c0$`Credible set`
z=D3$beta/sqrt(D3$varbeta)
z[89]=-z[89]
z.list[[1]]<-z
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
#####
z=D3$beta/sqrt(D3$varbeta)
lll=D3$LD
lll[105,]
lll
lll[105,]
lll=D3$LD
table(lll==1)
table(abs(lll>=0.99))
table(abs(lll>=0.95))
table(abs(lll>=0.98))
table(abs(lll>=0.99))
0ю98*0ю98
0.98*0.98
#####
z=D3$beta/sqrt(D3$varbeta)
lll=D3$LD
la=lll[105,]
za=z[105]
lll=D3$LD
la=lll[105,]
za=z[105]
z=z[-105]
lll=lll[-105,-105]
dim(lll)
la
la=la[-105]
la
length(la)
lll[501,1:499]=lll[500,1:499]=la
lll[1:499,501]=lll[1:499,500]=la
dim(la)
dim(lll)
new_l=array(1,c(501,501))
new_l=array(1,c(501,501))
new_l[1:499,1:499]=lll
new_l[501,1:499]=new_l[500,1:499]=la
new_l[1:499,501]=new_l[1:499,500]=la
new_l
new_l[1:5,1:5]
new_l[499:501,499:501]
#####
z=D3$beta/sqrt(D3$varbeta)
lll=D3$LD
la=lll[105,]
la=la[-105]
za=z[105]
z=z[-105]
lll=lll[-105,-105]
z=c(z,za,za)
z.list[[1]]<-z
new_l=array(1,c(501,501))
new_l[1:499,1:499]=lll
new_l[501,1:499]=new_l[500,1:499]=la
new_l[1:499,501]=new_l[1:499,500]=la
ld.list[[1]]<-new_l
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$PIPs[500:501]
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
za
#####
z=D3$beta/sqrt(D3$varbeta)
lll=D3$LD
la=lll[105,]
la=la[-105]
za=z[105]
z=z[-105]
lll=lll[-105,-105]
z=c(z,za,za+1)
z.list[[1]]<-z
new_l=array(1,c(501,501))
new_l[1:499,1:499]=lll
new_l[501,1:499]=new_l[500,1:499]=la
new_l[1:499,501]=new_l[1:499,500]=la
ld.list[[1]]<-new_l
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
CARMA.results$Outliers
#####
z=D3$beta/sqrt(D3$varbeta)
lll=D3$LD
la=lll[105,]
la=la[-105]
za=z[105]
z=z[-105]
lll=lll[-105,-105]
z=c(z,za,za+10)
z.list[[1]]<-z
new_l=array(1,c(501,501))
new_l[1:499,1:499]=lll
new_l[501,1:499]=new_l[500,1:499]=la
new_l[1:499,501]=new_l[1:499,500]=la
ld.list[[1]]<-new_l
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
CARMA.results$Outliers
CARMA.results$Outliers[,1]
CARMA.results$Outliers[,2]
CARMA.results$Outliers[,1]
CARMA.results$Outliers[,1]
ind_o=CARMA.results$Outliers[,1]
ind_o=sort(CARMA.results$Outliers[,1])
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,=ind_o],n=1000)
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
#####
z=D3$beta/sqrt(D3$varbeta)
z[20]
#####
z=D3$beta/sqrt(D3$varbeta)
z[20]=z[20]+3
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
c0$`Credible set`
z
#####
z=D3$beta/sqrt(D3$varbeta)
z[498]=z[498]+5
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
#####
z=D3$beta/sqrt(D3$varbeta)
z[20]=z[20]+5
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
#####
z=D3$beta/sqrt(D3$varbeta)
z[20]=-z[20]
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
sample(20,1:500)
sample(1:500,20)
rnorm(length(ind))
rnorm(length(ind))
ind=sample(1:500,20)
rnorm(length(ind))
rnorm(length(ind),sd=3)
rnorm(length(ind),sd=2)
rnorm(length(ind),sd=3)
#####
z=D3$beta/sqrt(D3$varbeta)
ind=sample(1:500,20)
z[ind]=z[ind]+rnorm(length(ind),sd=3)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
ind=sample(1:500,10)
z[ind]=z[ind]+rnorm(length(ind),sd=3)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
#####
z=D3$beta/sqrt(D3$varbeta)
ind=sample(1:500,10)
z[ind]=z[ind]+rnorm(length(ind),sd=3)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
CARMA.results$`Credible set`
#####
z=D3$beta/sqrt(D3$varbeta)
ind=sample(1:500,10)
z[ind]=z[ind]+rnorm(length(ind),sd=2)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
CARMA.results$`Credible set`
CARMA.results$Outliers
SSr=susie_rss(z = z.list[[1]],R=ld.list[[1]],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:2]]})
CARMA.results$`Credible set`
ind_o=sort(CARMA.results$Outliers[,1])
SSr=susie_rss(z = z.list[[1]][-ind_o],R=ld.list[[1]][-ind_o,-ind_o],n=1000)
apply(SSr$alpha,MAR=1,FUN=function(x){y=1:length(x); ind=order(x,decreasing = TRUE); x[ind[1:5]]})
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")    #compile functions that use C++11 in R
##########  Feature learning step for the CARMA algorithm, such as learning the total number of input loci, the total number of variants at each locus, etc.#########
##########  Additionally, CARMA defines the lists of the model spaces and the likelihood of all input loci###########
{
log.2pi<-log(2*pi)
L<-length(z.list)
p.list<-list()
for(i in 1:L){
z.list[[i]]<-as.matrix(z.list[[i]])
p.list[[i]]<-nrow(z.list[[i]])
}
B<-Max.Model.Dim
all.B.list<-list()
for(i in 1:L){
all.B.list[[i]]<-list()
all.B.list[[i]][[1]]<-integer(0)
all.B.list[[i]][[2]]<-Matrix(nrow = 0,ncol=p.list[[i]],data=0,sparse = T)
}
q.list<-list()
if(!is.null(w.list)){
for(i in 1:L){
q.list[[i]]<-ncol(w.list[[i]])
invariant.var.index<-which((apply(w.list[[i]][,-1],2,sd))==0)
if(length(invariant.var.index)!=0){
invariant.var<-w.list[[i]][,invariant.var.index+1]
w.list[[i]]<-as.matrix(cbind(1,scale(w.list[[i]][,-1])))
w.list[[i]][,invariant.var.index+1]<-invariant.var
}else{
w.list[[i]]<-as.matrix(cbind(1,scale(w.list[[i]][,-1])))
}
}
}
if(is.null(label.list)){
for(i in 1:L){
label.list[[i]]=paste0('locus_',i)
}
}
Sigma.list<-list()
for(i in 1:L){
Sigma.list[[i]]<-as.matrix(ld.list[[i]])
}
S.list<-list()
for(i in 1:L){
S.list[[i]]<-integer(0)
}
all.C.list<-list()
for(i in 1:L){
all.C.list[[i]]<-list()
all.C.list[[i]][[1]]<-integer(0)
all.C.list[[i]][[2]]<-Matrix(nrow = 0,ncol=p.list[[i]],data=0,sparse = T)
}
all.epsilon.threshold<-0
epsilon.list<-list()
for(i in 1:L){
epsilon.list[[i]]<-epsilon.threshold*p.list[[i]]
all.epsilon.threshold<-all.epsilon.threshold+  epsilon.threshold*p.list[[i]]
}
model.prior='Poisson'
standardize.model.space=T
}
library(CARMA)
library(coloc)
data(coloc_test_data)
attach(coloc_test_data)
z.list<-list()
ld.list<-list()
lambda.list<-list()
z=D3$beta/sqrt(D3$varbeta)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
lambda.list[[1]]<-1
library(CARMA)
library(coloc)
data(coloc_test_data)
attach(coloc_test_data)
z.list<-list()
ld.list<-list()
lambda.list<-list()
z=D3$beta/sqrt(D3$varbeta)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
lambda.list[[1]]<-1
w.list=NULL
lambda.list=NULL
output.labels='.'
label.list=NULL
effect.size.prior='Spike-slab'
rho.index=0.99
BF.index=10
EM.dist='Logistic',
all.iter=3
all.inner.iter=10
input.alpha=0
epsilon.threshold=1e-5
num.causal=10
y.var=1
tau=0.04
outlier.switch=T
outlier.BF.index=1/3.2
prior.prob.computation='Logistic')
prior.prob.computation='Logistic'
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")    #compile functions that use C++11 in R
Sys.setenv("PKG_CXXFLAGS"="-std=c++11")
Sys.setenv("PKG_CXXFLAGS"="-std=c++11"){
CARMA::outlier_Cauchy_fixed_sigma_marginal()
CARMA::outlier_Cauchy_fixed_sigma_marginal
CARMA::ind_Normal_fixed_sigma_marginal
source("C:/Projects/Sanger_OT_susie_coloc/02_CARMA_test/CARMA_orig.R")
source("C:/Projects/Sanger_OT_susie_coloc/02_CARMA_test/CARMA_orig_Rcpp.R")
library(coloc)
data(coloc_test_data)
attach(coloc_test_data)
z.list<-list()
ld.list<-list()
lambda.list<-list()
z=D3$beta/sqrt(D3$varbeta)
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
lambda.list[[1]]<-1
ind=sample(1:500,20)
z.list[[1]]<-z[ind]
ld.list[[1]]<-D3$LD[ind,ind]
library(CARMA)
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
View(CARMA.results)
Z
z.list
ind=sample(1:500,20)
z.list[[1]]<-z[ind]
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA,results
CARMA.results
CARMA.results$`Credible set`
CARMA.results=CARMA.results[[1]]
CARMA.results$`Credible set`
CARMA.results$`Credible set`[[2]]
unlist(CARMA.results$`Credible set`[[2]])
ind=unlist(CARMA.results$`Credible set`[[2]])
z.list[[1]]<-z[ind]
ld.list[[1]]<-D3$LD[ind]
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
ind=unlist(CARMA.results$`Credible set`[[2]])
z.list[[1]]<-z[ind]
ld.list[[1]]<-D3$LD[ind,ind]
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
ind=unlist(CARMA.results$`Credible set`[[2]])
z.list[[1]]<-z[ind]
ld.list[[1]]<-D3$LD[ind,ind]
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
CARMA.results
z.list[[1]]<-z
ld.list[[1]]<-D3$LD
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
CARMA.results=CARMA.results[[1]]
ind=unlist(CARMA.results$`Credible set`[[2]])
z.list[[1]]<-z[ind]
ld.list[[1]]<-D3$LD[ind,ind]
z.list[[2]]<-z[ind]
ld.list[[2]]<-D3$LD[ind,ind]
z.list[[2]][6]=-z.list[[2]][6]
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
lambda.list
lambda.list[[2]]=1
CARMA.results<-CARMA(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
View(CARMA.results)
z.list
ld.list
source("Projects/Sanger_OT_susie_coloc/02_CARMA_test/CARMA_fixed_sigma.R")
View(CARMA_fixed_sigma)
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
library(MAtrix)
library(Matrix)
CARMA.results<-CARMA_fixed_sigma(z.list,ld.list,lambda.list=lambda.list,
outlier.switch=T)
View(CARMA.results)
View(CARMA.results)
source("Projects/Sanger_OT_susie_coloc/02_CARMA_test/CARMA_fixed_sigma.R")
library(Matrix)
save(list=c("z.list","ld.list","lambda.list","CARMA.results"),file="Projects/Sanger_OT_susie_coloc/03_CARMA_outliers/test.RData")
View(CARMA.results)
setwd("~/Projects/Sanger_OT_CARMA_refactor/03_unit_R/")
source("../02_R_src/00_CARMA_function.R")
library(data.table)
library(CARMA)
z_full=fread("01_test_z.csv",header=T,sep=",",data.table=F)
ld=fread("01_test_ld.csv",header=F,sep=",",data.table=F)
z=z_full[,"z"]
R1=CARMA_spike_slab_noEM_rcpp(
z,
ld,
lambda=1,
path_to_src="../02_R_src/",
sparse_fun=FALSE)
R2=CARMA_spike_slab_noEM_rcpp(
z,
ld,
lambda=1,
path_to_src="../02_R_src/",
sparse_fun=TRUE)
#R3=CARMA_fixed_sigma(z.list = list(z),ld.list = list(ld),lambda.list = list(1),output.labels = NULL)
R3=CARMA(z.list = list(z),ld.list = list(ld),lambda.list = list(1),output.labels = NULL)
R3=R3[[1]]
R1$Outliers
R2$Outliers
R3$Outliers
cor(cbind(R1$PIPs,R2$PIPs,R3$PIPs))
